DATA_BLOCK DB 99
STRUCT
	VAR0	: INT := 111;
	VAR10	: STRUCT
		VAR10_1		: INT  := 101;
		VAR10_2		: ARRAY  [1 .. 2 ] OF INT  := 1, 2;
		VAR10_3		: ARRAY  [1 .. 2 ] OF STRUCT
			VAR10_3_1	: INT  := 1031;
			VAR10_3_2	: ARRAY  [1 .. 2 ] OF INT  := 1, 2;
		END_STRUCT;
		VAR10_4		: INT;
	END_STRUCT;
	VAR20	: ARRAY [4 .. 5] OF STRUCT
		VAR20_1		: WORD;
	END_STRUCT
	VAR1	: DWORD;
END_STRUCT;
BEGIN
	VAR0				:= 10101;
	VAR10.VAR10_1			:= 101;
	VAR10.VAR10_2[1]		:= 1;
	VAR10.VAR10_2[2]		:= 2;
//	VAR10.VAR10_3[1].VAR10_3_1	:= 1031;
//	VAR10.VAR10_3[1].VAR10_3_2[1]	:= 1;
//	VAR10.VAR10_3[1].VAR10_3_2[2]	:= 2;
	VAR10.VAR10_3[2].VAR10_3_1	:= 1032;
	VAR10.VAR10_3[2].VAR10_3_2[1]	:= 3;
	VAR10.VAR10_3[2].VAR10_3_2[2]	:= 4;
	VAR10.VAR10_4			:= 104;
	VAR20[4].VAR20_1		:= W#16#204;
	VAR20[5].VAR20_1		:= W#16#205;
	VAR1				:= DW#16#111;
END_DATA_BLOCK


FUNCTION_BLOCK FB 1
VAR_INPUT
	FBVAR0		: DINT;
	FBVAR1		: STRUCT
		FBVAR1_1	: INT;
		FBVAR1_2	: DINT;
		FBVAR1_3	: STRUCT
			FBVAR1_3_1	: INT;
			FBVAR1_3_2	: INT;
		END_STRUCT;
	END_STRUCT;
	FBVAR2		: ARRAY [1 .. 2] OF STRUCT
		FBVAR2_1	: DWORD;
		FBVAR2_2	: ARRAY [1 .. 2] OF WORD;
	END_STRUCT;
END_VAR
BEGIN
	//TODO
END_FUNCTION_BLOCK


DATA_BLOCK DB 1
	FB 1
BEGIN
END_DATA_BLOCK


FUNCTION FC 1 : VOID
VAR_INPUT
	FCVAR0		: DINT;
	FCVAR1		: STRUCT
		FCVAR1_1	: INT;
		FCVAR1_2	: DINT;
	END_STRUCT;
	FCVAR2		: ARRAY [1 .. 2] OF STRUCT
		FCVAR2_1	: DWORD;
		FCVAR2_2	: ARRAY [1 .. 2] OF WORD;
	END_STRUCT;
END_VAR
BEGIN
	//TODO
END_FUNCTION


ORGANIZATION_BLOCK OB 1
BEGIN
	// Check the DB 99 initial values.
	AUF		DB 99
	L		DBLG
	__ASSERT==	__ACCU 1,	30
	L		DBW 0	// DB99.VAR0
	__ASSERT==	__ACCU 1,	10101
	L		DBW 2	// DB99.VAR10.VAR10_1
	__ASSERT==	__ACCU 1,	101
	L		DBW 4	// DB99.VAR10.VAR10_2[1]
	__ASSERT==	__ACCU 1,	1
	L		DBW 6	// DB99.VAR10.VAR10_2[2]
	__ASSERT==	__ACCU 1,	2
	L		DBW 8	// DB99.VAR10.VAR10_3[1].VAR10_3_1
	__ASSERT==	__ACCU 1,	1031
	L		DBW 10	// DB99.VAR10.VAR10_3[1].VAR10_3_2[1]
	__ASSERT==	__ACCU 1,	1
	L		DBW 12	// DB99.VAR10.VAR10_3[1].VAR10_3_2[2]
	__ASSERT==	__ACCU 1,	2
	L		DBW 14	// DB99.VAR10.VAR10_3[2].VAR10_3_1
	__ASSERT==	__ACCU 1,	1032
	L		DBW 16	// DB99.VAR10.VAR10_3[2].VAR10_3_2[1]
	__ASSERT==	__ACCU 1,	3
	L		DBW 18	// DB99.VAR10.VAR10_3[2].VAR10_3_2[2]
	__ASSERT==	__ACCU 1,	4
	L		DBW 20	// DB99.VAR10.VAR10_4
	__ASSERT==	__ACCU 1,	104
	L		DBW 22	// DB99.VAR20[4].VAR20_1
	__ASSERT==	__ACCU 1,	W#16#204
	L		DBW 24	// DB99.VAR20[5].VAR20_1
	__ASSERT==	__ACCU 1,	W#16#205
	L		DBD 26	// DB99.VAR1
	__ASSERT==	__ACCU 1,	DW#16#111


	//TODO check symbolic DB 99 access.

	//TODO CALL FB 1

	//TODO CALL FC 1


	CALL SFC 46 // STOP CPU
END_ORGANIZATION_BLOCK
