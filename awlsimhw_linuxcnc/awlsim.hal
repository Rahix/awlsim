# ---------------------------------------
# --- Awlsim
# --- LinuxCNC HAL configuration file
# ------


# --- Load the awlsim HAL userspace module ---
#
# Parameters:
#  --input-base BASE	: S7 input base-address byte-offset to use for the HAL module.
#			  If 0 is used, address-mapping will start at I 0.0
#			  If 1 is used, address-mapping will start at I 1.0
#			  etc...
#
#  --output-base BASE	: S7 output base-address byte-offset to use for the HAL module.
#			  If 0 is used, address-mapping will start at Q 0.0
#			  If 1 is used, address-mapping will start at Q 1.0
#			  etc...
#
#  --input-size SIZE	: Size of the input area mapping, in bytes.
#
#  --output-size SIZE	: Size of the output area mapping, in bytes.
#
#  --listen HOST:PORT	: The HOST and PORT the core server should listen on.
#			  Defaults to localhost:4151
#			  You can connect with awlsim-gui to this port
#			  to watch, debug or change the AWL program.
#
#  --loglevel LVL	: Change the log level.
#
#  --nice NICE		: Renice the process. -20 <= NICE <= 19.
#			  Default: Do not renice.
#
#  Last argument	: The Awlsim AWL/STL project to load and run.
#
loadusr -Wn awlsim awlsim-linuxcnc-hal --listen localhost:4151 --input-base 0 --input-size 32 --output-base 0 --output-size 32 /tmp/PROGRAM.awlpro


# --- Enable the used input pins ---
# All input pins are deactivated by default.
# So all input pins connected below, should be activated here by writing
# a '1' to the '.active' pin.
# Deactivated input pins will not be forwarded from LinuxCNC to the awlsim PLC program.
setp	awlsim.input.bit.0.0.active		1
setp	awlsim.input.u8.1.active		1
setp	awlsim.input.u16.2.active		1
setp	awlsim.input.s16.4.active		1
setp	awlsim.input.u31.6.active		1
setp	awlsim.input.s32.10.active		1
setp	awlsim.input.float.14.active		1

# --- Connect input pins ---
# These are examples only. 'foobar.valx' is the signal source.
net	awlsim-in-bit-0-0	foobar.val0		=> awlsim.input.bit.0.0
net	awlsim-in-u8-1		foobar.val1		=> awlsim.input.u8.1
net	awlsim-in-u16-2		foobar.val2		=> awlsim.input.u16.2
net	awlsim-in-s16-4		foobar.val3		=> awlsim.input.s16.4
net	awlsim-in-u31-6		foobar.val4		=> awlsim.input.u31.6
net	awlsim-in-s32-10	foobar.val5		=> awlsim.input.u31.10
net	awlsim-in-float-14	foobar.val6		=> awlsim.input.float.14


# --- Enable the used output pins ---
# All output pins are deactivated by default.
# So all output pins connected below, should be activated here by writing
# a '1' to the '.active' pin.
# Deactivated output pins will not be forwarded from the awlsim PLC program to LinuxCNC.
setp	awlsim.output.bit.0.0.active		1
setp	awlsim.output.u8.1.active		1
setp	awlsim.output.u16.2.active		1
setp	awlsim.output.s16.4.active		1
setp	awlsim.output.u31.6.active		1
setp	awlsim.output.s32.10.active		1
setp	awlsim.output.float.14.active		1

# --- Connect output pins ---
# These are examples only. 'bizbaz.valx' is the signal destination.
net	awlsim-in-bit-0-0	awlsim.output.bit.0.0	=> bizbaz.val0
net	awlsim-in-u8-1		awlsim.output.u8.1	=> bizbaz.val1
net	awlsim-in-u16-2		awlsim.output.u16.2	=> bizbaz.val2
net	awlsim-in-s16-4		awlsim.output.s16.4	=> bizbaz.val3
net	awlsim-in-u31-6		awlsim.output.u31.6	=> bizbaz.val4
net	awlsim-in-s32-10	awlsim.output.u31.10	=> bizbaz.val5
net	awlsim-in-float-14	awlsim.output.float.14	=> bizbaz.val6



# Always keep this at the end of this file.
# This will activate data transfer between awlsim and LinuxCNC.
setp	awlsim.config.ready	1
